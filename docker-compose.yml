version: '3.8'
services:

  postgres:
    image: postgres:11.5-alpine
    network_mode: host
    restart: always
    volumes:
      - stihi-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=stihi
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - PGPORT=5432
    ports:
      - 5432:5432

  redis:
    image: redis:6.0.9
    network_mode: host
    restart: always
    volumes:
      - stihi-redis:/data
    ports:
      - 6379:6379

  stihi-backend:
    network_mode: host
    restart: always
    image: debian:10
    ports:
      - 9001:9001
      - 9095:9095
    volumes:
      - ./configs/stage:/configs
      - go-local-user:/usr/local/bin/
    tmpfs:
      - /var/tmp
    env_file:
      - ./docker/scripts/.connections.env
    depends_on:
      - stihi-init
    command:
      - stihi-backend
      - -db_config=/configs/db_config.yaml
      - -mongo_db_config=/configs/mongo_db_config.yaml
      - -redis_config=/configs/redis_config.yaml
      - -config=/configs/stihi_backend_config.yaml

  stihi-commands:
    network_mode: host
    image: debian:10
    volumes:
      - ./configs/stage:/configs
      - ./docker/scripts:/scripts
      - go-local-user:/usr/local/bin/
    env_file:
      - ./docker/scripts/.connections.env
    depends_on:
      - stihi-init
    entrypoint: bash /scripts/export.sh

  stihi-init:
    container_name: stihi-init
    build:
      dockerfile: docker/init/Dockerfile
      context: .
    volumes:
      - ./configs/stage:/configs
      - go-local-user:/usr/local/bin/
    env_file:
      - ./docker/scripts/.connections.env
    depends_on:
      - postgres
      - redis
volumes:
 go-local-user:
 stihi-postgres:
   external: true
 stihi-redis:
   external: true

